<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Robert Colley Blog</title>
        <link>https://robertjcolley.github.io/logbook/blog</link>
        <description>Robert Colley Blog</description>
        <lastBuildDate>Thu, 24 Feb 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[What is my plan?]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/02/24/what-is-my-plan</link>
            <guid>/2022/02/24/what-is-my-plan</guid>
            <pubDate>Thu, 24 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Often times you get asked about "What is your 5 year plan?" and I have NO idea about specifics.]]></description>
            <content:encoded><![CDATA[<p>Often times you get asked about &quot;What is your 5 year plan?&quot; and I have NO idea about specifics.</p><p>As of right now, I know:</p><h2>1. I want to start my own business</h2><p>I know I can run a successful business. I am very detail oriented and I have a lot of experience &quot;running&quot; a team to create a product. I have made mistakes and have been overextended, but with one sole product and enough time, I know that I can create a product that will be successful.</p><h2>2. I might need to go back to school to get an MBA</h2><p>I don&#x27;t know everything I need to know to start a good business. I can create a decent software product, but I don&#x27;t know how to create a successful business from a software product.</p><h2>3. I don&#x27;t have a good idea for a business that I want to commit to</h2><p>One of the ideas I&#x27;ve had before is a &quot;social wellness&quot; platform. It would be very similar to <a href="https://nextstepgoodlife.com">NextStep GoodLife</a>, but I don&#x27;t really want to make another social media app. I&#x27;ve thought about making a fitness tracking app, but that is a super saturated market and I don&#x27;t want to be in it. I thought about &quot;party tech&quot; but there isn&#x27;t a huge market for scalability - just frat bros and sorority girls in that market. That would include party planning apps, which is somewhat niche. I&#x27;ve also thought about creating a javascript teaching platform, something in crypto, or something else entirely.</p><p>Eesha had an idea to see everything about her health records in one place by connecting portals together. I don&#x27;t know how to monetize this.</p><p>TLDR; Ideas list:</p><ul><li>Create a social wellness platform</li><li>Create a fitness tracking app</li><li>Create a party planning app</li><li>Create a teaching platform</li><li>Create a something in crypto</li><li>Create a health records app</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Building ViroCore --> ViroReact --> Use in starter kit]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/02/23/building-viro</link>
            <guid>/2022/02/23/building-viro</guid>
            <pubDate>Wed, 23 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[I am assuming that you have your directories set up with viro, virocore and the starter-kit as follows:]]></description>
            <content:encoded><![CDATA[<p>I am assuming that you have your directories set up with <code>viro</code>, <code>virocore</code> and the <code>starter-kit</code> as follows:</p><p><img src="/img/blog/2022-02-23-building-viro/directories.png" alt="directories"/></p><h2>1. Build ViroCore</h2><h3>(iOS) Building the renderer to be used in react-viro platform</h3><h3>1.1. Make sure you followed through steps 1 - 3 mentioned in the android section</h3><h3>1.2. Execute the following commands to install pods from <code>Podfile</code></h3><pre><code class="language-bash"># in virocore/
cd ios
pod install
</code></pre><h3>1.3. Open <code>ViroRenderer.xcworkspace</code> in Xcode. Build scheme <code>ViroKit</code> with Build Configuration set to <code>Release</code> and target set to <code>Generic iOS Device</code>.</h3><p><img src="/img/blog/2022-02-23-building-viro/virocore.png" alt="directories"/></p><p><strong>Note:</strong></p><p>If you want the ability to run on Simulator, change target to any of the <code>iOS Simulator</code> targets instead of <code>Generic iOS Device</code>. If the Xcode build succeeded, you should see a bunch of new files copied over in <code>viro/ios/dist/</code> folder in the viro repo you cloned earlier.</p><h2>2. Build ViroReact</h2><h3>2.1. Execute the following commands to install pods from <code>Podfile</code></h3><pre><code class="language-bash"># in viro/
cd ios
pod install
</code></pre><h3>2.2. Open <code>ViroReact.xcworkspace</code> in Xcode. Build scheme <code>ViroReact</code> with Build Configuration set to <code>Release</code> and target set to <code>Generic iOS Device</code>.</h3><p><img src="/img/blog/2022-02-23-building-viro/viroreact.png" alt="directories"/></p><p>This should generate more files in the ios/dist/ folder.</p><h3>2.3. Install pods</h3><p>I don&#x27;t know if this is required, but I&#x27;m doing it anyways</p><pre><code class="language-bash"># in viro/
cd ios
pod install
</code></pre><h3>2.4. Bundle the ViroReact project into a tarball</h3><pre><code class="language-bash">yarn bundle
</code></pre><h2>3. Use in starter kit</h2><h3>3.1. Clear the yarn cache of the tarball</h3><pre><code class="language-bash"># I know, this cleans the entire cache. 
# yarn cache clean @viro-community/react-viro doesn&#x27;t properly clear the tarball from the cache.
yarn cache clean
</code></pre><h3>3.2. install dependencies</h3><pre><code class="language-bash"># in starter-kit/
yarn install

yarn add ../viro/viro-community-react-viro-&lt;version&gt;.tgz

cd ios
pod install
</code></pre><h3>3.3. Run the starter kit</h3>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Adding back GVR on iOS for Viro]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/02/22/gvr-ios</link>
            <guid>/2022/02/22/gvr-ios</guid>
            <pubDate>Tue, 22 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[VR was removed on iOS in the last few months, but it's still a huge part of the ecosystem. This is supported on Android, and we're working on adding it back to iOS. This entry records my progress and troubleshooting.]]></description>
            <content:encoded><![CDATA[<p>VR was removed on iOS in the last few months, but it&#x27;s still a huge part of the ecosystem. This is supported on Android, and we&#x27;re working on adding it back to iOS. This entry records my progress and troubleshooting.</p><h2>PR</h2><p>The pull request is <a href="https://github.com/ViroCommunity/viro/pull/73">here</a>. I had to filter .pngs, .strings, and .bin files out of the PR so I could even load the page. This PR is a bit of a mess and I think there is work which has already been done which is duplicated here. <code>static_lib/</code> has already been removed.</p><h2>Looking around</h2><p>There is some commented out code</p><h2>Discussion with Ed</h2><h3>Todo</h3><ol><li>Rebuild virocore</li></ol><p>[https://github.com/ViroCommunity/virocore#ios-building-the-renderer-to-be-used-in-react-viro-platform]<!-- -->(building virocore to be used in react-viro).</p><ul class="contains-task-list"><li class="task-list-item"><input type="checkbox" disabled=""/> <!-- -->Having trouble doing this. It seems that ios/dist does not get completely regenerated when ViroKit is rebuilt. I&#x27;m not sure why!</li></ul><ol start="2"><li>uncomment references</li></ol><ul class="contains-task-list"><li class="task-list-item"><input type="checkbox" checked="" disabled=""/> <!-- -->should be done!</li></ul><ol start="3"><li>Distribute virocore with cocoa pods</li></ol><p>This is the part to figure out.</p><ul><li><a href="https://cocoapods.org/">https://cocoapods.org/</a></li><li><a href="https://guides.cocoapods.org/making/getting-setup-with-trunk.html">https://guides.cocoapods.org/making/getting-setup-with-trunk.html</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Building @viro-community/react-viro package]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/02/13/building-viro</link>
            <guid>/2022/02/13/building-viro</guid>
            <pubDate>Sun, 13 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[The first major change I had to make was to add react native as a dev dependency. Android will not build correctly without it.]]></description>
            <content:encoded><![CDATA[<p>The first major change I had to make was to add react native as a dev dependency. Android will not build correctly without it.</p><p>After sifting around through the build.gradle, settings.gradle, and android/build.gradle files, I had a realization that there might be certain parts of the android project that are put into different places when the ./prepare_release.sh script is run.</p><p>The next AHA! moment was when I realized that I can install a dependency from a tarball. The package.json for the starter kit looks slightly different:</p><pre><code class="language-json">&quot;dependencies&quot;: {
  &quot;@viro-community/react-viro&quot;: &quot;../viro/viro-community-react-viro-2.22.0.tgz&quot;,
  &quot;fsevents&quot;: &quot;^2.3.2&quot;,
  &quot;react&quot;: &quot;17.0.2&quot;,
  &quot;react-native&quot;: &quot;0.65.1&quot;
}
</code></pre><p>instead of:</p><pre><code class="language-json">&quot;dependencies&quot;: {
  &quot;@viro-community/react-viro&quot;: &quot;../viro&quot;,
  &quot;fsevents&quot;: &quot;^2.3.2&quot;,
  &quot;react&quot;: &quot;17.0.2&quot;,
  &quot;react-native&quot;: &quot;0.65.1&quot;
},
</code></pre><p>This tarball puts everything into the right spot for a local installation, and then the starter-kit builds on android! I had to add the dist folder for the generated JS files so that <code>npm pack</code> would get everything needed.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Developing with ViroCommunity/viro Locally]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/02/13/develop-with-viro-locally</link>
            <guid>/2022/02/13/develop-with-viro-locally</guid>
            <pubDate>Sun, 13 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Set up ViroCommunity/viro]]></description>
            <content:encoded><![CDATA[<h2>1. Set up ViroCommunity/viro</h2><h3>1.1. Clone ViroCommunity/viro repo</h3><pre><code class="language-bash">gh repo clone ViroCommunity/viro
</code></pre><h3>1.2. Install dependencies</h3><pre><code class="language-bash">cd viro
npm install
</code></pre><h2>2. Set up the Starter Kit</h2><h3>2.1. Clone the starter kit</h3><pre><code class="language-bash">gh repo clone ViroCommunity/starter-kit
</code></pre><h3>2.2. Install dependencies</h3><pre><code class="language-bash">cd starter-kit
npm install
</code></pre><h2>3. (optional) Make changes viro</h2><p>Make changes to the <code>viro</code> folder to fix a bug, add something new, etc.</p><h2>4. Build viro</h2><p>Ensure that your typescript compiles by running the build command.</p><pre><code class="language-bash"># from viro/
npm run build
</code></pre><h2>5. Run the &quot;prepare_release.sh&quot; script</h2><p>This script will create a tarball of the files and binaries needed in the viro folder for the dependency to work correctly.</p><pre><code class="language-bash"># from viro/
./prepare_release.sh
</code></pre><p>You should have a tarball in the viro folder called <code>viro-community-react-viro-&lt;package.json version&gt;.tgz</code>.</p><h2>6. Install the tarball</h2><pre><code class="language-bash">cd starter-kit
npm install ../viro/viro-community-react-viro-&lt;package.json version&gt;.tgz
</code></pre><h2>7. Build the starter kit</h2><h3>iOS</h3><p>If developing on ios, run <code>pod install</code> in the <code>ios</code> folder and then run the starter kit from xCode.</p><h3>Android</h3><p>If developing on android, run <code>npm run android</code> with a device connected.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[RFC and RFT: Expo Starter Kit Instructions]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/02/13/expo-starter-kit-instructions</link>
            <guid>/2022/02/13/expo-starter-kit-instructions</guid>
            <pubDate>Sun, 13 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Hey everyone! I'd like to start testing the expo plugin. I've attached a tarball of the repo, and I'd like our testers to follow these instructions and make sure that everything works correctly.]]></description>
            <content:encoded><![CDATA[<p>Hey everyone! I&#x27;d like to start testing the expo plugin. I&#x27;ve attached a tarball of the repo, and I&#x27;d like our testers to follow these instructions and make sure that everything works correctly.</p><p>Specifically, I&#x27;d like to test the following:</p><ul><li>iOS: M1 Mac</li><li>iOS: Intel Mac</li><li>Android</li><li>Android with non-default configuration (<a href="https://github.com/ViroCommunity/viro/pull/88#discussion_r805226852">https://github.com/ViroCommunity/viro/pull/88#discussion_r805226852</a>)</li></ul><h2>Instructions</h2><h3>1. Create a new expo project</h3><pre><code class="language-bash">expo init my-project
</code></pre><h3>2. Install downloaded tarball as a dependency to the project</h3><p>I would recommend keeping the tarball close to the project folder.</p><h4>2.1. NPM</h4><pre><code class="language-bash">npm install --save ../path/to/viro-community-react-viro-2.22.0.tgz
</code></pre><h4>2.2. Yarn</h4><pre><code class="language-bash">yarn add ../path/to/viro-community-react-viro-2.22.0.tgz
</code></pre><h3>3. Add the plugin to app.json</h3><pre><code class="language-json">&quot;plugins&quot;: [ &quot;@viro-community/react-viro&quot; ]
</code></pre><p>OR if testing <a href="https://github.com/ViroCommunity/viro/pull/88#discussion_r805226852">Android with non-default configuration</a></p><pre><code class="language-json">&quot;plugins&quot;: [
  [
    &quot;@viro-community/react-viro&quot;,
    {
      &quot;androidXrMode&quot;: &quot;GVR&quot;
    }
  ]
],
</code></pre><h3>4. Generate the ios/android folders</h3><h4>4.1. iOS</h4><p><code>expo run:ios</code> will generate the ios/ folder and will run <code>pod install</code> in the project.</p><pre><code class="language-bash">expo run:ios -d &lt;device id | device name&gt;
</code></pre><h4>4.2. Android</h4><pre><code class="language-bash">expo run:android
</code></pre><h3>5. Add changes which use the viro library</h3><p>Replace the contents of App.tsx with the following:</p><pre><code class="language-js">import React, {useState} from &#x27;react&#x27;;
import {StyleSheet} from &#x27;react-native&#x27;;
import {
  ViroARScene,
  ViroText,
  ViroConstants,
  ViroARSceneNavigator,
} from &#x27;@viro-community/react-viro&#x27;;

const HelloWorldSceneAR = () =&gt; {
  const [text, setText] = useState(&#x27;Initializing AR...&#x27;);

  function onInitialized(state, reason) {
    console.log(&#x27;guncelleme&#x27;, state, reason);
    if (state === ViroConstants.TRACKING_NORMAL) {
      setText(&#x27;Hello World!&#x27;);
    } else if (state === ViroConstants.TRACKING_NONE) {
      // Handle loss of tracking
    }
  }

  return (
    &lt;ViroARScene onTrackingUpdated={onInitialized}&gt;
      &lt;ViroText
        text={text}
        scale={[0.5, 0.5, 0.5]}
        position={[0, 0, -1]}
        style={styles.helloWorldTextStyle}
      /&gt;
    &lt;/ViroARScene&gt;
  );
};

export default () =&gt; {
  return (
    &lt;ViroARSceneNavigator
      autofocus={true}
      initialScene={{
        scene: HelloWorldSceneAR,
      }}
      style={styles.f1}
    /&gt;
  );
};

var styles = StyleSheet.create({
  f1: {flex: 1},
  helloWorldTextStyle: {
    fontFamily: &#x27;Arial&#x27;,
    fontSize: 30,
    color: &#x27;#ffffff&#x27;,
    textAlignVertical: &#x27;center&#x27;,
    textAlign: &#x27;center&#x27;,
  },
});

</code></pre><h3>6. Build and run the project</h3><h4>6.1. iOS</h4><p>The iOS instructions are different than the Android instructions because run:ios does not build and run on a physical device. If using a physical device, you might have to configure code signing. I was able to do this by choosing my personal team (not a paid developer account) and removing the push notifications capability. I did have to go into settings to trust the developer certificate, but you shouldn&#x27;t have this problem if you have a paid developer account. This is found in <code>Settings --&gt; General --&gt; VPN &amp; Device Management</code>.</p><p><img src="/img//blog/expo.png" alt="Screenshot"/></p><pre><code class="language-bash">expo run:ios -d &lt;my device id | device name&gt;
</code></pre><h4>6.2. Android</h4><pre><code class="language-bash">expo run:android
</code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest: Flush Promises and Timers with Snapshot Tests]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/01/24/jest-flush-snapshot-timers</link>
            <guid>/2022/01/24/jest-flush-snapshot-timers</guid>
            <pubDate>Mon, 24 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[I got a warning error which looked like:]]></description>
            <content:encoded><![CDATA[<p>I got a warning error which looked like:</p><pre><code class="language-error">Warning: It looks like you&#x27;re using the wrong act() around your test interactions.
Be sure to use the matching version of act() corresponding to your renderer:

// for react-dom:
import {act} from &#x27;react-dom/test-utils&#x27;;
// ...
act(() =&gt; ...);

// for react-test-renderer:
import TestRenderer from &#x27;react-test-renderer&#x27;;
const {act} = TestRenderer;
// ...
act(() =&gt; ...);
</code></pre><p>that has also been documented <a href="https://github.com/testing-library/react-hooks-testing-library/issues/516">here</a>. I was able to fix this by adding a similar function <code>flushPromisesAndTimersForSnapshot()</code> and the error messages went away.</p><pre><code class="language-typescript">import { act } from &#x27;@testing-library/react&#x27;;
import renderer from &#x27;react-test-renderer&#x27;;

export function flushPromisesAndTimers() {
  return act(
    () =&gt;
      new Promise((resolve) =&gt; {
        setTimeout(resolve, 500);
        jest.runAllTimers();
      })
  );
}

export function flushPromisesAndTimersForSnapshot() {
  return renderer.act(
    () =&gt;
      new Promise((resolve) =&gt; {
        setTimeout(resolve, 500);
        jest.runAllTimers();
      })
  );
}
</code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest: Accurate Snapshots When Loading from UseEffect]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/01/20/jest-fixing-bad-snapshots-when-loading-data</link>
            <guid>/2022/01/20/jest-fixing-bad-snapshots-when-loading-data</guid>
            <pubDate>Thu, 20 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[I had a useEffect which fetched data, and I noticed that the snapshot showed the loading spinner when the data was being fetched. I was able to fix this by adding flushPromisesAndTimers() before waitFor() a testID detection. The component looked something like this:]]></description>
            <content:encoded><![CDATA[<p>I had a useEffect which fetched data, and I noticed that the snapshot showed the loading spinner when the data was being fetched. I was able to fix this by adding <code>flushPromisesAndTimers()</code> before <code>waitFor()</code> a testID detection. The component looked something like this:</p><pre><code class="language-tsx">export default function Component(props: Props) {
  const [error, setError] = useState&lt;null | Error&gt;(null);
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() =&gt; {
    const setup = async () =&gt; {
      setLoading(true);
      try {
        const newData = await fetch(&#x27;path/to/data&#x27;);
        setData(newData);
      } catch (newError) {
        setError(newError as Error);
        handleError(newError as Error);
      } finally {
        setLoading(false);
      }
    };

    setup();
  }, []);

  if (loading || !data) {
    return (
      &lt;View style={[styles.container, styles.loading]}&gt;
        &lt;Loading /&gt;
      &lt;/View&gt;
    );
  }

  return (
    &lt;View style={styles.container} testID=&quot;ComponentTestID&quot;&gt;
      &lt;Text&gt;{data}&lt;/Text&gt;
    &lt;/View&gt;
  );
}

</code></pre><p>and the test looked like this:</p><pre><code class="language-typescript">test(&#x27;should render correctly&#x27;, async () =&gt; {
  const tree = create(
    &lt;Component /&gt;
  );

  await flushPromisesAndTimers();

  await waitFor(() =&gt; {
    expect(tree.toJSON()).toMatchSnapshot();
  });
});
</code></pre><p>My flush promises and timers function is from <a href="https://github.com/facebookexperimental/Recoil/pull/1463">this issue</a> and listed on the <a href="https://recoiljs.org/docs/guides/testing/#testing-recoil-state-with-asyncronous-queries-inside-of-a-react-component">recoil docs</a> and looks like this:</p><pre><code class="language-typesript">/**
 * flushes promises and timers
 *
 * @export
 * @return {*}
 */
export function flushPromisesAndTimers() {
  return act(
    () =&gt;
      new Promise((resolve) =&gt; {
        setTimeout(resolve, 500);
        jest.runAllTimers();
      })
  );
}
</code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest: String Matching (Use RegEx)]]></title>
            <link>https://robertjcolley.github.io/logbook/blog/2022/01/19/jest-using-regex-in-string-matching</link>
            <guid>/2022/01/19/jest-using-regex-in-string-matching</guid>
            <pubDate>Wed, 19 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[While trying to use result.getByText() to find a component, I found that it was not working. My test case was a regression test to make sure that a component could not say "1 providers." The component looked like:]]></description>
            <content:encoded><![CDATA[<p>While trying to use <code>result.getByText()</code> to find a component, I found that it was not working. My test case was a regression test to make sure that a component could not say &quot;1 providers.&quot; The component looked like:</p><pre><code class="language-tsx"> &lt;Typography
  variant=&quot;caption&quot;
  color=&quot;textSecondary&quot;
  data-testid=&quot;approved-by-provider-count&quot;
&gt;
  {t(&#x27;Approved by&#x27;)} {abbrNum(supporters.length, 1)}{&#x27; &#x27;}
  {supporters.length === 1 ? t(&#x27;provider&#x27;) : t(&#x27;providers&#x27;)}
&lt;/Typography&gt;
</code></pre><p>and the snapshot was:</p><pre><code class="language-html">&lt;span
  class=&quot;MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary&quot;
  data-testid=&quot;approved-by-provider-count&quot;&gt;
    Approved by

    1

    provider
&lt;/span&gt;  
</code></pre><p>I couldn&#x27;t figure out the newlines and spaces in my expect statement. I tried to use a regex to match the string, and it worked correctly! <code>/s</code> matches any whitespace character, including newlines.</p><pre><code class="language-typescript">const expected = /Approved by\s*1\s*provider/;
const expected1 = /Approved by\s*1\s*providers/;
expect(result.queryByText(expected1)).not.toBeInTheDocument();
expect(result.getByText(expected)).toBeInTheDocument();
</code></pre>]]></content:encoded>
        </item>
    </channel>
</rss>